#
# Aliases
#

repositoryName: &repositoryName freepik-company/ai-bumblebee-proxy

# Custom images

helmfileImage: &helmfileImage
  image: europe-west1-docker.pkg.dev/fc-shared/common/pipeline-helmfile-v0.168.1:1.41.3

builderImage: &builderImage
  image: europe-west1-docker.pkg.dev/fc-shared/common/builder:1.57.0

bumblebeeBaseImage: &bumblebeeBaseImage
  image: europe-west1-docker.pkg.dev/fc-shared/idi/bumblebee-base:1.0.0

mockserverImage: &mockserverImage
  image: mockserver/mockserver:5.14.0

# Slack notification configuration alias
githubStatus: &githubStatus
  description: curl for set inprogress status build on github
  image: europe-west1-docker.pkg.dev/fc-shared/common/pipeline-slack-notifications:0.1.11
  burnupEnabled: "false"
  burndownEnabled: "false"
  params:
    - name: pipelineName
      value: $(context.pipelineRun.name)
    - name: pipelineNamespace
      value: $(context.pipelineRun.namespace)
    - name: repositoryName
      value: *repositoryName
  script: |
    #!/bin/sh
    curl -L -X POST \
    -H 'Accept: application/vnd.github+json' \
    -H "Authorization: Bearer $JARVIS_GITHUB_TOKEN" -H 'X-GitHub-Api-Version: 2022-11-28' \
    https://api.github.com/repos/$(params.repositoryName)/statuses/$(params.commit) \
    -d "{\"state\":\"${STATE}\",\"target_url\":\"https://pipelines.fpkmon.com/#/namespaces/$(params.pipelineNamespace)/pipelineruns/$(params.pipelineName)\",\"description\":\"${DESCRIPTION}\",\"context\":\"${CONTEXT}\"}"

# Github status pipelines
githubStatusPending: &githubStatusPending
  env:
    - name: STATE
      value: pending
    - name: DESCRIPTION
      value: "Build In progress: for commit $(params.commit)"
    - name: CONTEXT
      value: tekton-integration-pr/full-pipeline
    - name: JARVIS_GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          key: jarvis-github-token
          name: jarvis-github-token

githubStatusFailure: &githubStatusFailure
  env:
    - name: STATE
      value: failure
    - name: DESCRIPTION
      value: "Build Failure: for commit $(params.commit)"
    - name: CONTEXT
      value: tekton-integration-pr/full-pipeline
    - name: JARVIS_GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          key: jarvis-github-token
          name: jarvis-github-token

githubStatusSuccess: &githubStatusSuccess
  env:
    - name: STATE
      value: success
    - name: DESCRIPTION
      value: "Build Success: for commit $(params.commit)"
    - name: CONTEXT
      value: tekton-integration-pr/full-pipeline
    - name: JARVIS_GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          key: jarvis-github-token
          name: jarvis-github-token

# Git clone alias
gitClone: &gitClone
  <<: *builderImage
  burnupEnabled: "false"
  burndownEnabled: "false"
  script: |
    #!/bin/sh
    set -e

    [ -d /fc/workspace-data/lost+found ] && rm -rf /fc/workspace-data/lost+found
    [ -d /fc/git-credentials ] && cp -R /fc/git-credentials /root/.ssh
    chmod 700 /root/.ssh
    chmod -R 400 /root/.ssh/id_rsa /root/.ssh/known_hosts

    git config --global --add safe.directory /fc/workspace-data
    git clone -b $(params.branch) $(params.repository) /fc/workspace-data

    git reset --hard $(params.commit)
    git checkout $(params.branch)
